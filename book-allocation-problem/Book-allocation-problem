class Solution{ 
   bool ispossible(int A[], int N, int M,int mid)
   {
       int student_count = 1;
       int pagesum = 0;
       for(int i = 0; i < N; i++)
       {
           if(pagesum + A[i] <= mid)
           {
               pagesum += A[i];
           }
           else
           {
               student_count++;
               if(student_count > M || A[i] > mid)
               {
                   return false;
               }
               pagesum=A[i];
           }
       }
       return true;
   }

   public:
   //Function to find minimum number of pages.
   int findPages(int A[], int N, int M) 
   
   {   if(N < M)
       {
        return -1;    
       }
       
       int count=0;
       //code here
       int s = 0;
       for(int i = 0; i < N; i++)
       {
           count += A[i];
           
       }
       int e = count;
       
       int ans = -1;
       while(s <= e)
       {   int mid = s + (e-s)/2;
           if(ispossible(A, N,  M, mid))
           {
               ans = mid;
               e = mid-1;
           } 
           else
           {
               s = mid+1;
           }
       
       }
       return ans;
   }
};
